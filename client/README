ServerUsage-Client - README
================================================================================

Name: ServerUsage-Client

Version: 6.3.5

Release date: 2012-09-03

Author: Nicola Asuni (nicola@fubra.com)

Copyright (2012-2012):
	Fubra Limited
	Manor Coach House
	Church Hill
	Aldershot
	Hampshire
	GU12 4RQ
	UK
	http://www.fubra.com
	support@fubra.com

URL: https://github.com/fubralimited/ServerUsage


SOFTWARE LICENSE (AGPLv3):
--------------------------

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU Affero General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option) any
later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License along
with this program.  If not, see <http://www.gnu.org/licenses/>.

See LICENSE.TXT file for more information.


DESCRIPTION:
------------

The ServerUsage-Client is a program to collect usage statistic from a computer
running a GNU-Linux Operating System.

The ServerUsage-Client program is composed by two main sections: the SystemTap
(http://sourceware.org/systemtap) serverusage_client.ko kernel module to collect
and output usage statistics of the machine where it is installed, and the
serverusage_tcpsender.bin to send the output to a log server via TCP.

To collect and process data generated by this program check the
ServerUsage-Server project.

This folder contains the source code of ServerUsage-Client:

* makefile

	This is the makefile to create and install executable binaries.

* README

	This is the file you are currently reading.

* serverusage_client

	SysV Init script to execute ServerUsage-Client.

* serverusage_client.8

	Manpage for ServerUsage-Client.

* serverusage_client.spec

	SPEC file for RPM packaging.

* serverusage_client.conf

	Configuration file.

* serverusage_client.stp

	SystemTap (http://sourceware.org/systemtap) script to collect information on
	computer usage.
	This files is compiled as serverusage_client.ko and executed using the staprun
	program.
	This program collects statistical information every SAMPLING_TIME seconds
	and sends the output to stdout when the current timestamp is divisible by
	the requested time interval. In this way multiple instances of this program
	running on different hosts are always synchronized.

	### OUTPUT FORMAT (CSV - COMMA SEPARATED VALUES):

		The log scripts writes a line of data for each process, user id (UID)
		and IP address. The columns on each row are:

		* line type - string used to identify blocks of data: "@S" = first line of the block, "@E" = last line of the block, "@@" = line inside the block.
		* start sampling time - [integer] time when measure started (seconds since EPOCH);
		* end sampling time - [integer] time when measure ended (seconds since EPOCH);
		* name of the process [string];
		* server ID [string] string used to identify the current server (by default hostname);
		* user ID [integer] process UID;
		* local IP address [string] set only when reading TCP and UDP traffic;
		* ticks [integer] number of CPU clock ticks;
		* io read [integer] bytes read from IO storage;
		* io write [integer] bytes written to IO storage;
		* network in [integer] number of bytes received via TCP or UDP packets;
		* network out [integer] number of bytes sent via TCP or UDP packets;

	You can also use this module directly using the following syntax:

	staprun -R -b 1024 /usr/bin/serverusage_client.ko smp=60 srvid="localhost"

		smp: is the sampling interval in seconds.
		srvid: is the server id (hostname, custom string or a numeric ID).

* serverusage_tcpsender.c

	This program is compiled as serverusage_tcpsender.bin. It accept a text as
	input (from serverusage.ko) and sends data to a remote server via TCP.

	This program in invoked using the following syntax:

	staprun -b 1024 /usr/bin/serverusage_client.ko smp=60 srvid="host001" | /usr/bin/serverusage_tcpsender.bin "127.0.0.1" 9930 "/var/log/serverusage_cache.log"

	The 3 arguments of serverusage_tcpsender.bin are: the IP address, the TCP
	port of remote log server where ServerUsage-Server is installed, and the
	local cache file where to store temporary logs in case of network errors.


REQUIRED PACKAGES TO COMPILE THE SOURCES:
-----------------------------------------

	The following packages are required to compile the sources:

		* systemtap 1.7+
		* kernel-devel
		* kernel-debug-debuginfo-*
		* kernel-debuginfo-*
		* kernel-debuginfo-common-*
		* install general development packages for C

	Check on internet for the correct modules for your OS and kernel version.

	### Instructions for CentOS and Scientific Linux:

	yum groupinstall 'Development Tools'
	yum install kernel-devel elfutils-devel
	
	Install debug packages (change repository if you are not using CentOS):

		wget http://debuginfo.centos.org/6/$(uname -m)/kernel-debug-debuginfo-$(uname -r).rpm
		wget http://debuginfo.centos.org/6/$(uname -m)/kernel-debuginfo-$(uname -r).rpm
		wget http://debuginfo.centos.org/6/$(uname -m)/kernel-debuginfo-common-$(uname -m)-$(uname -r).rpm
		rpm -U --force kernel-debug-debuginfo-$(uname -r).rpm kernel-debuginfo-$(uname -r).rpm kernel-debuginfo-common-$(uname -m)-$(uname -r).rpm

	yum install sqlite-devel crash-devel rpm-devel nss-devel avahi-devel latex2html xmlto xmlto-tex publican publican-fedora gtkmm24-devel libglademm24-devel boost-devel

	On the production machines we have to install just the systemtap-runtime

COMPILE AND INSTALL
-------------------

	Once the required packages are installed, copy/extract the files in this
	folder to a folder in your home directory and cd into it.

	Now execute the following commands to compile and install:

		make
		make install


CONFIGURE
---------

	To configure ServerUsage-Client edit the /etc/serverusage_client.conf
	configuration file.


RUN
---

	To start the ServerUsage-Client module you can use the SysV init script:

	/etc/init.d/serverusage_client

	To startup the service at boot you can use the chkconfig:
		chkconfig serverusage_client on
	or update-rc.d command (depending by OS type).

================================================================================
